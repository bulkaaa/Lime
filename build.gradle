buildscript {
    ext {
        springBootVersion = '1.5.4.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'

version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-web')
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
        {
            exclude group: 'org.javassist'
        }
    compile('org.javassist:javassist:3.22.0-GA')
    compile("org.springframework.boot:spring-boot-starter-security")
    compile ('org.apache.commons:commons-email:1.5')
    compile ('org.knowm.xchart:xchart:3.3.1')
    compile (group: 'org.apache.commons', name: 'commons-lang3', version: '3.0')
    compile ('com.fasterxml.jackson.core:jackson-core:2.8.6')
    compile ('com.fasterxml.jackson.core:jackson-annotations:2.8.6')
    compile ('com.fasterxml.jackson.core:jackson-databind:2.8.6')
    compile (group: 'io.swagger', name: 'swagger-annotations', version: '1.5.0')
    compile (group: 'javax.mail', name: 'mail', version: '1.4.1')
    compile (group: 'javax.activation', name: 'activation', version: '1.1')
    compile ("io.springfox:springfox-swagger2:2.0.3")
    compile (group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.0.3')
    compile ('mysql:mysql-connector-java')
    compile (group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.0')
    compile (group: 'org.modelmapper', name: 'modelmapper', version: '1.1.1')
    compile("org.springframework.boot:spring-boot-starter-actuator")
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile group: 'com.h2database', name: 'h2', version: '1.4.196'
    testCompile 'org.springframework.security:spring-security-test:4.0.1.RELEASE'

}

def webappDir = "$projectDir/src/main/webapp"
sourceSets {
    main {
        resources {
            srcDirs = ["$webappDir/dist", "$projectDir/src/main/resources"]
        }
    }
}

jar {
    manifest {
        attributes "Main-Class": "com.modern.codes.lime.LimeApplication"
    }

    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}
test {
    exclude "com/modern/codes/lime/service/IBasicCRUDServiceTest.class"
}



